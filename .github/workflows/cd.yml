name: CD EventHub

on:
  release:
    types: [published]
  pull_request:
    types: [closed]
    branches: [main]


jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install dependencies
        run: pip install -r requirements.txt

  tests_unit_integration:
    name: tests_unit_integration
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - run: pip install -r requirements.txt

      - name: Run unit tests
        run: python manage.py test app/test/test_unit

      - name: Run integration tests
        run: python manage.py test app/test/test_integration

  tests_e2e:
    name: tests_e2e
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - run: |
          pip install -r requirements.txt
          pip install playwright
          python -m playwright install --with-deps

      - name: Run e2e tests
        run: python manage.py test app/test/test_e2e

  deploy:
    if: |
      (github.event_name == 'release') ||
      (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    needs: [lint, tests_unit_integration, tests_e2e]

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      
      - name: Build and push Docker image
        run: |
          docker build -t augustocheca/eventhub:${{ github.ref_name }} -t augustocheca/eventhub:latest .
          docker push augustocheca/eventhub:${{ github.ref_name }}
          docker push augustocheca/eventhub:latest

      
      - name: Trigger redeploy on Render
        run: curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_URL }}